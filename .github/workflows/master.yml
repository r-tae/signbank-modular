on:
  push:
    branches:
      - master
    paths:
      - 'config/**'
      - 'signbank/**'
      - 'Dockerfile'
      - '.github/workflows/**'
      - 'droplet-userdata.sh'
      - 'nginx-config.conf'

jobs:

  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout main
      uses: actions/checkout@v2

    - name: Create TAG variable
      run: |
        TAG=$(echo $GITHUB_SHA | head -c7)
        echo "TAG=${TAG}" >> $GITHUB_ENV

    - name: Build container image
      run: docker build -t registry.digitalocean.com/signbank/signbank:${{ env.TAG }} .

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push image to DigitalOcean Container Registry
      run: docker push registry.digitalocean.com/asb/static-example:$(echo $GITHUB_SHA | head -c7)


    - name: Update deployment file
      run: sed -i 's|<IMAGE>|registry.digitalocean.com/asb/static-example:'${{ env.TAG }}'|' $GITHUB_WORKSPACE/config/deployment.yml

    - name: Create DigitalOcean droplet
      run: |
        DROPLET_DETAILS=$(doctl compute droplet create test \
        --image ubuntu-20-04-x64 --size s-1vcpu-1gb --region sgp1 \
        --wait --ssh-keys ${{ secrets.WORKFLOW_SSH_FINGERPRINT }} --user-data-file droplet-userdata.sh \
        --enable-ipv6 --enable-monitoring --enable-private-networking --output json)
        DROPLET_ID=$(echo $DROPLET_DETAILS | jq ".[0].id")
        doctl compute floating-ip-action assign ${{ env.FLOATING_IP }}
    
    - name: Run deploy.sh
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ env.FLOATING_IP }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          docker pull registry.digitalocean.com/signbank/signbank:${{ env.TAG }}
          nginx -c ~/nginx.conf
