on:
  push:
    branches:
      - master
    paths:
      - 'config/**'
      - 'signbank/**'
      - 'Dockerfile'
      - '.github/workflows/**'
      - 'droplet-userdata.sh'
      - 'nginx-config.conf'

env:
  FLOATING_IP: 157.230.194.191

jobs:

  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout main
      uses: actions/checkout@v2

    - name: Create TAG variable
      run: |
        TAG=$(echo $GITHUB_SHA | head -c7)
        echo "TAG=${TAG}" >> $GITHUB_ENV

    - name: Build container image
      run: docker build -t registry.digitalocean.com/signbank/signbank:${{ env.TAG }} .

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push image to DigitalOcean Container Registry
      run: docker push registry.digitalocean.com/signbank/signbank:${{ env.TAG }}

    - name: Create DigitalOcean droplet
      run: |
        DROPLET_DETAILS=$(doctl compute droplet create test \
        --image ubuntu-20-04-x64 --size s-1vcpu-1gb --region sgp1 \
        --wait --ssh-keys ${{ secrets.WORKFLOW_SSH_FINGERPRINT }} --user-data-file droplet-userdata.sh \
        --enable-ipv6 --enable-monitoring --enable-private-networking --output json)
        DROPLET_ID=$(echo $DROPLET_DETAILS | jq ".[0].id")
        doctl compute floating-ip-action assign ${{ env.FLOATING_IP }} $DROPLET_ID
    
    - name: Run deploy.sh
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ env.FLOATING_IP }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          docker pull registry.digitalocean.com/signbank/signbank:${{ env.TAG }}
          echo "
          http {
            include /etc/nginx/mime.types; 
            default_type application/octet-stream; 

            server {
                listen 443 ssl;
                listen 80 default_server;
                ssl_certificate /etc/nginx/ssl/proxy.pem;
                ssl_certificate_key /etc/nginx/ssl/proxy.key;
                ssl_session_cache shared:SSL:1m;
                ssl_session_timeout 2m;

                location / {
                    proxy_pass 127.0.0.1:8000;
                    proxy_set_header Host $host;
                    proxy_redirect off;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto https;
                }
            }
          }" >> nginx.conf
          nginx -c ~/nginx.conf
          echo "${{ env.ENV_PROD_FILE }}" >> env.prod
          docker run --detach --env-file env.prod -p 127.0.0.1:8000:8000 --name auslan registry.digitalocean.com/signbank/signbank:${{ env.TAG }} gunicorn --bind=0.0.0.0 signbank.wsgi

